Crie uma função que recebe uma lista qualquer e troca a
metade da frente com a metade 
de trás

criar uma lista lista1 vazia

criar outra lista lista2 vazia

criar um indicador de inicio

ultilizar o laço de repetição while para percorrer a metade da lista 

com o metodo.append a primeira metade da lista sera adicionada a lista1

criar outro indicador de inicio

criar outro laço de repetição while onde enquanto troca2 for menor len(l)

adiciona a lista 2

conta mais 1 

atualizar troca2 onde vai ser int(len(l)/2

retornar troca2

def troca(l):
    lista1 = []
    lista2 = []

    troca = 0
    while troca < len(l)/2:
        lista1.append(l[troca])
        troca += 1
    troca2 = 0
    while troca2 < len(l):
        lista2.append(l[troca2])
        troca2 += 1
        troca2 = int(len(l)/2)
        return troca2
        
lis = ["eu", "amo", "a", "natureza" ]

lis.clear()
lis.append(lista2)
lis.append(lista1)
print(lis)

//////////////////////////////////////////////////////////////////////


def metade(n):
    a = list(reversed(n))
    return a
    
lista = ['eu', 'amo', 'a', 'natureza', 'toda']
# ['natureza', 'toda', 'a' eu amo]

test = metade(lista)
print(test)

////////////////////////////////////////////////////////////////////

# Crie uma função que recebe uma lista qualquer e troca a
# metade da frente com a metade de trás

# definir uma função "metade" que recebe uma lista "L" como parametro

# definir uma lista l2 vazia

# definir uma lista l3 vazia

# definir uma lista l4 vazia

# percorrer a lista, para cada iten na lista

# verificar qual é a segunda metade 

# adicionar na lista "list1"

# remover da lista "l"

# verificar qual é a primeira metade 

# adicionar na lista "list2"

# remover da lista "l"

# adicionar "list1"

# adicionar list "l"

# adicionar "list2" na lista "X"

# retornar a lists "X"


import math
def metade(l):
    i = 0
    l2 = []
    l3 = []
    l4 = []
    for iten in l:
        i = i + 1
        if i <= len(l)/2:
            l2.append(iten)
        elif (len(l)%2 == 1)and(i == math.ceil(len(l)/2)):
            l4.append(iten)
        else:
            l3.append(iten)
    l.clear()
    l.append(l3)
    l.append(l4)
    l.append(l2)
    return l

x = ['eu', 'amo', 'andar', 'de', 'bicicleta']

print(metade(x))
